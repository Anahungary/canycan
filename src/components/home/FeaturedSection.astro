---
// src/components/home/FeaturedSection.astro
import ArticleCard from '../blog/ArticleCard.astro';
import Button from '../ui/Button.astro';

interface Article {
  id: string;
  title: string;
  excerpt: string;
  image: string;
  category: string;
  author?: {
    name: string;
    avatar?: string;
  };
  date?: string;
  readingTime?: number;
}

interface Props {
  title: string;
  description: string;
  articles: Article[];
  viewAllUrl?: string;
  layout?: 'grid' | 'featured' | 'horizontal';
  columns?: 3 | 4;
}

const {
  title,
  description,
  articles,
  viewAllUrl = '/blog',
  layout = 'grid',
  columns = 3
} = Astro.props;

// Configurar layout de la grid según el número de columnas
const gridClass = columns === 3 
  ? 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6' 
  : 'grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-5';

// Determinar si usar layout destacado (primer artículo grande)
const useFeaturedLayout = layout === 'featured' && articles.length > 3;
---

<div class="featured-section">
  {/* Encabezado con título, descripción y enlace "Ver todos" */}
  <div class="flex flex-col md:flex-row md:items-end justify-between mb-8">
    <div class="mb-4 md:mb-0">
      <h2 class="text-2xl font-bold text-[#2E2E2E] mb-2">{title}</h2>
      <p class="text-gray-600">{description}</p>
    </div>
    {viewAllUrl && (
      <Button href={viewAllUrl} variant="outline" size="sm">
        Ver todos
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
        </svg>
      </Button>
    )}
  </div>
  
  {/* Layout destacado: primer artículo grande, el resto en grid */}
  {useFeaturedLayout ? (
    <div class="space-y-8">
      {/* Artículo destacado */}
      <div class="featured-article">
        <ArticleCard
          {...articles[0]}
          featured={true}
        />
      </div>
      
      {/* Resto de artículos en grid */}
      <div class={`grid ${gridClass}`}>
        {articles.slice(1, 4).map(article => (
          <ArticleCard {...article} />
        ))}
      </div>
    </div>
  ) : layout === 'horizontal' ? (
    /* Layout horizontal para secciones con scrolling horizontal */
    <div class="overflow-x-auto pb-4 -mx-4 px-4">
      <div class="flex space-x-5" style="min-width: max-content;">
        {articles.map(article => (
          <div class="w-72 flex-shrink-0">
            <ArticleCard {...article} />
          </div>
        ))}
      </div>
    </div>
  ) : (
    /* Layout grid estándar */
    <div class={`grid ${gridClass}`}>
      {articles.map(article => (
        <ArticleCard {...article} />
      ))}
    </div>
  )}
</div>