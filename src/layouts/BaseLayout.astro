---
// BaseLayout.astro - VERSI√ìN CORREGIDA PARA WHATSAPP
import Header from '../components/common/Header.astro';
import Footer from '../components/common/Footer.astro';
import '../styles/global.css';

interface Props {
  title: string;
  description?: string;
  ogImage?: string;
  canonicalUrl?: string;
  bodyClass?: string;
  // üîß NUEVOS PROPS PARA WHATSAPP
  ogImageWidth?: number;
  ogImageHeight?: number;
  ogImageType?: string;
}

const { 
  title, 
  description = 'La revista digital para amantes de mascotas: consejos, gu√≠as, comparativa de razas y m√°s.',
  ogImage = '/og-image.jpg',
  canonicalUrl,
  bodyClass = '',
  // üîß VALORES OPTIMIZADOS PARA WHATSAPP
  ogImageWidth = 1200,
  ogImageHeight = 630,
  ogImageType = 'image/jpeg'
} = Astro.props;

// üîß URL BASE UNIFICADA Y CORRECTA
const siteUrl = import.meta.env.SITE || import.meta.env.PUBLIC_SITE_URL || 'https://canicat.netlify.app';

// üîß FUNCI√ìN PARA VALIDAR Y CREAR URL ABSOLUTA DE IMAGEN
const getValidImageUrl = (imageUrl: string): string => {
  // Si ya es absoluta, usar tal como est√°
  if (imageUrl.startsWith('http')) {
    return imageUrl;
  }
  
  // üîß CREAR URL ABSOLUTA
  const absoluteUrl = `${siteUrl}${imageUrl.startsWith('/') ? '' : '/'}${imageUrl}`;
  
  // üîß FALLBACK A IMAGEN GEN√âRICA SI NO EXISTE LA ESPEC√çFICA
  // En producci√≥n podr√≠as validar con fetch, aqu√≠ usamos l√≥gica simple
  if (imageUrl.includes('/images/breeds/') || imageUrl.includes('/images/articles/')) {
    // Para razas y art√≠culos, usar imagen gen√©rica si no est√° especificada
    return imageUrl === '/og-image.jpg' ? `${siteUrl}/og-default.jpg` : absoluteUrl;
  }
  
  return absoluteUrl;
};

const finalOgImage = getValidImageUrl(ogImage);

// URL can√≥nica
const canonical = canonicalUrl 
  ? (canonicalUrl.startsWith('http') ? canonicalUrl : `${siteUrl}${canonicalUrl}`) 
  : `${siteUrl}${Astro.url.pathname}`;

// üîß T√çTULO OPTIMIZADO PARA WHATSAPP (m√°ximo 60 caracteres)
const optimizedTitle = title.length > 60 ? `${title.substring(0, 57)}...` : title;

// üîß DESCRIPCI√ìN OPTIMIZADA PARA WHATSAPP (m√°ximo 160 caracteres)
const optimizedDescription = description.length > 160 ? `${description.substring(0, 157)}...` : description;
---

<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{optimizedTitle} | Kaj√∫</title>
    <meta name="description" content={optimizedDescription} />
    <link rel="canonical" href={canonical} />
    
    <!-- ‚úÖ Netlify Identity Widget -->
    <script src="https://identity.netlify.com/v1/netlify-identity-widget.js" is:inline></script>
    
    <!-- Favicons -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <link rel="manifest" href="/site.webmanifest">
    
    <!-- üîß OPEN GRAPH OPTIMIZADO PARA WHATSAPP -->
    <meta property="og:type" content="website" />
    <meta property="og:site_name" content="Kaju" />
    <meta property="og:url" content={canonical} />
    <meta property="og:title" content={optimizedTitle} />
    <meta property="og:description" content={optimizedDescription} />
    <meta property="og:image" content={finalOgImage} />
    
    <!-- üöÄ META TAGS ESPEC√çFICOS PARA WHATSAPP -->
    <meta property="og:image:width" content={ogImageWidth.toString()} />
    <meta property="og:image:height" content={ogImageHeight.toString()} />
    <meta property="og:image:type" content={ogImageType} />
    <meta property="og:image:alt" content={`${optimizedTitle} - Kaju`} />
    
    <!-- üîß TWITTER CARDS OPTIMIZADAS -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:site" content="@Kaju" />
    <meta property="twitter:url" content={canonical} />
    <meta property="twitter:title" content={optimizedTitle} />
    <meta property="twitter:description" content={optimizedDescription} />
    <meta property="twitter:image" content={finalOgImage} />
    <meta property="twitter:image:alt" content={`${optimizedTitle} - Balto`} />
    
    <!-- üîß META TAGS ADICIONALES PARA WHATSAPP -->
    <meta property="article:publisher" content={siteUrl} />
    <meta property="og:locale" content="es_ES" />
    
    <!-- üîß PRECARGAR IMAGEN PRINCIPAL PARA MEJOR PERFORMANCE -->
    <link rel="preload" as="image" href={finalOgImage} />
    
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    
    <!-- üîß JSON-LD PARA MEJOR SEO -->
    <script type="application/ld+json" is:inline>
    {
      "@context": "https://schema.org",
      "@type": "WebSite",
      "name": "Kaj√∫",
      "description": "La revista digital para amantes de mascotas",
      "url": "{siteUrl}",
      "publisher": {
        "@type": "Organization",
        "name": "Kaj√∫",
        "url": "{siteUrl}"
      }
    }
    </script>
    
    <slot name="head" />
  </head>
  <body class={`min-h-screen flex flex-col bg-[#FAFAFA] font-inter text-[#2E2E2E] ${bodyClass}`}>
    <Header />
    
    <main class="flex-grow">
      <slot />
    </main>
    
    <Footer />
    
    <!-- ‚úÖ Netlify Identity Script -->
    <script is:inline>
      (function() {
        'use strict';

        function waitForNetlifyIdentity() {
          return new Promise((resolve) => {
            if (window.netlifyIdentity) {
              resolve(window.netlifyIdentity);
            } else {
              const checkIdentity = setInterval(() => {
                if (window.netlifyIdentity) {
                  clearInterval(checkIdentity);
                  resolve(window.netlifyIdentity);
                }
              }, 100);
            }
          });
        }

        document.addEventListener('DOMContentLoaded', async function() {
          const identity = await waitForNetlifyIdentity();
          
          identity.on('init', user => {
            console.log('‚úÖ Netlify Identity inicializado', user ? 'con usuario' : 'sin usuario');
          });
          
          identity.on('login', user => {
            console.log('‚úÖ Usuario logueado:', user?.email);
            document.location.href = '/admin/';
          });
        });
      })();
    </script>
    
    <!-- üîß DEBUG PARA VERIFICAR META TAGS -->
    <script is:inline>
      if (typeof window !== 'undefined' && window.location.search.includes('debug=meta')) {
        console.log('üîç META TAGS DEBUG:');
        console.log('og:image:', document.querySelector('meta[property="og:image"]')?.getAttribute('content'));
        console.log('og:title:', document.querySelector('meta[property="og:title"]')?.getAttribute('content'));
        console.log('og:description:', document.querySelector('meta[property="og:description"]')?.getAttribute('content'));
        console.log('Site URL:', '{siteUrl}');
      }
    </script>
  </body>
</html>