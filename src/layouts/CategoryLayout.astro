---
import BaseLayout from './BaseLayout.astro';
import Container from '../components/ui/Container.astro';
import Button from '../components/ui/Button.astro';
import Badge from '../components/ui/Badge.astro';
import ArticleList from '../components/blog/ArticleList.astro';
import Card from '../components/ui/Card.astro';
import { Image } from 'astro:assets';
import Newsletter from '../components/common/Newsletter.astro';

interface Props {
  title: string;
  description: string;
  image?: string;
  category: string;
  articles: any[];
  featuredArticle?: any;
}

const { 
  title, 
  description, 
  image = '/images/categories/default.jpg',
  category,
  articles = [],
  featuredArticle
} = Astro.props;

// üîß FUNCI√ìN PARA AVATARES REALES DE AUTORES
function getAuthorAvatar(authorName: string): string {
  const authorAvatars: Record<string, string> = {
    'Ana Mar√≠a Prieto': '/images/ana-p2.webp',
    'Manuel Alejandro Bedoya': '/images/manuel-p1.webp',
    'Equipo Editorial Balto': '/images/baltologo.svg',
    'Editor Balto': '/images/baltologo.svg'
  };
  
  return authorAvatars[authorName] || '/images/baltologo.svg';
}

// Funciones utilitarias
const formatDate = (date: string | Date) => {
  return new Date(date).toLocaleDateString('es-ES', {
    day: 'numeric',
    month: 'short',
    year: 'numeric'
  });
};

const getTimeAgo = (date: string | Date) => {
  const now = new Date();
  const articleDate = new Date(date);
  const diffInHours = Math.floor((now.getTime() - articleDate.getTime()) / (1000 * 60 * 60));
  
  if (diffInHours < 24) {
    return `hace ${diffInHours}h`;
  } else if (diffInHours < 24 * 7) {
    return `hace ${Math.floor(diffInHours / 24)}d`;
  } else {
    return formatDate(date);
  }
};

// Art√≠culo destacado (el m√°s reciente si no se especifica)
const displayFeaturedArticle = featuredArticle || articles[0];

// Art√≠culos restantes para la grilla
const otherArticles = displayFeaturedArticle 
  ? articles.filter(a => a.id !== displayFeaturedArticle.id).slice(0, 8)
  : articles.slice(1, 9);

// üè∑Ô∏è EXTRAER TEMAS POPULARES DE LOS ART√çCULOS
const getAllTagsFromArticles = (articles: any[]) => {
  const allTags: string[] = [];
  
  articles.forEach(article => {
    if (article.categories && Array.isArray(article.categories)) {
      allTags.push(...article.categories);
    }
  });
  
  // Contar frecuencia y obtener los m√°s populares
  const tagCounts = allTags.reduce((acc, tag) => {
    const normalizedTag = tag.toLowerCase().trim();
    acc[normalizedTag] = (acc[normalizedTag] || 0) + 1;
    return acc;
  }, {} as Record<string, number>);
  
  return Object.entries(tagCounts)
    .sort(([,a], [,b]) => b - a)
    .slice(0, 8)
    .map(([tag, count]) => tag.charAt(0).toUpperCase() + tag.slice(1));
};

const popularTags = getAllTagsFromArticles(articles);

// Estad√≠sticas para mostrar
const stats = {
  total: articles.length,
  categories: popularTags.length,
  authors: [...new Set(articles.map(a => a.author?.name).filter(Boolean))].length || 1,
  readingTime: 6
};

// Icono seg√∫n categor√≠a
const getCategoryIcon = (category: string) => {
  const icons: Record<string, string> = {
    'entrenamiento': 'üéØ',
    'cuidado': 'üíö', 
    'comportamiento': 'üß†',
    'nuevos-duenos': 'üè†',
    'alimentacion': 'üçΩÔ∏è',
    'salud': 'üè•'
  };
  return icons[category?.toLowerCase()] || 'üìö';
};
---

<BaseLayout title={title} description={description}>
  {/* üéØ HERO SECTION */}
  <div class="bg-gradient-to-r from-green-500 to-green-600">
    <Container>
      <div class="py-16 md:py-20 text-center">
        <h1 class="text-3xl md:text-6xl font-bold text-white mb-4">{title}</h1>
        <p class="text-lg text-white text-opacity-90 max-w-2xl mx-auto mb-8">
          {description}
        </p>
        
        {/* Temas populares como badges en el hero */}
        {popularTags.length > 0 && (
          <div class="flex flex-wrap justify-center gap-3 max-w-2xl mx-auto">
            {popularTags.slice(0, 6).map(tag => (
              <span class="inline-flex items-center px-4 py-2 rounded-full text-sm font-medium bg-white bg-opacity-20 hover:bg-opacity-30 text-white transition-all duration-200">
                <span class="mr-2">{getCategoryIcon(category)}</span>
                {tag}
              </span>
            ))}
          </div>
        )}
      </div>
    </Container>
  </div>

  {/* üì∞ CONTENIDO PRINCIPAL */}
  <Container class="py-12">
    <div class="grid grid-cols-1 lg:grid-cols-12 gap-8">
      
      {/* üìù COLUMNA PRINCIPAL - ART√çCULOS */}
      <div class="lg:col-span-8">
        
        {/* üåü ART√çCULO DESTACADO */}
        {displayFeaturedArticle && (
          <section class="mb-12">
            <div class="flex items-center gap-3 mb-6">
              <div class="w-8 h-8 bg-gradient-to-br from-yellow-500 to-orange-500 rounded-lg flex items-center justify-center">
                <span class="text-white text-sm">‚≠ê</span>
              </div>
              <h2 class="text-2xl font-bold text-gray-900">Art√≠culo Destacado</h2>
              <div class="flex-1 h-px bg-gradient-to-r from-yellow-200 to-transparent"></div>
            </div>
            
            <Card class="overflow-hidden hover:shadow-xl transition-shadow duration-200">
              <div class="grid grid-cols-1 md:grid-cols-5 gap-0">
                <div class="md:col-span-2">
                  <Image 
                    src={displayFeaturedArticle.image || '/images/articles/default.jpg'} 
                    alt={displayFeaturedArticle.title || 'Art√≠culo destacado'}
                    width={400}
                    height={250}
                    class="w-full h-48 md:h-full object-cover"
                  />
                </div>
                <div class="md:col-span-3 p-6">
                  <div class="flex items-center gap-2 mb-3">
                    <Badge variant="secondary" size="sm">
                      {category}
                    </Badge>
                    <span class="text-sm text-gray-500">
                      {getTimeAgo(displayFeaturedArticle.date)}
                    </span>
                  </div>
                  
                  <h3 class="text-xl font-bold text-gray-900 mb-3 line-clamp-2">
                    <a href={`/articulos/${displayFeaturedArticle.id}`} class="hover:text-green-600 transition-colors">
                      {displayFeaturedArticle.title}
                    </a>
                  </h3>
                  
                  <p class="text-gray-600 mb-4 line-clamp-2">
                    {displayFeaturedArticle.excerpt}
                  </p>
                  
                  <div class="flex items-center justify-between">
                    <div class="flex items-center gap-2">
                      <Image 
                        src={getAuthorAvatar(displayFeaturedArticle.author?.name || 'Editor Balto')}
                        alt={displayFeaturedArticle.author?.name || 'Editor Balto'}
                        width={32}
                        height={32}
                        class="w-8 h-8 rounded-full object-cover"
                      />
                      <span class="text-sm text-gray-600">
                        {displayFeaturedArticle.author?.name || 'Editor Balto'}
                      </span>
                    </div>
                    <Button 
                      href={`/articulos/${displayFeaturedArticle.id}`} 
                      variant="primary" 
                      size="sm"
                    >
                      Leer m√°s
                    </Button>
                  </div>
                </div>
              </div>
            </Card>
          </section>
        )}
        
        {/* üì∞ ART√çCULOS RECIENTES */}
        <section class="mb-12">
          <div class="flex items-center gap-3 mb-8">
            <div class="w-8 h-8 bg-gradient-to-br from-green-500 to-emerald-600 rounded-lg flex items-center justify-center">
              <span class="text-white text-sm">üìö</span>
            </div>
            <h2 class="text-2xl font-bold text-gray-900">M√°s art√≠culos de {category}</h2>
            <div class="flex-1 h-px bg-gradient-to-r from-green-200 to-transparent"></div>
          </div>
          
          {otherArticles.length > 0 ? (
            <ArticleList 
              articles={otherArticles.map(article => ({
                id: article.id,
                title: article.title || 'T√≠tulo del art√≠culo',
                excerpt: article.excerpt || 'Descripci√≥n del art√≠culo',
                image: article.image || '/images/articles/default.jpg',
                author: {
                  name: article.author?.name || 'Editor Balto',
                  avatar: getAuthorAvatar(article.author?.name || 'Editor Balto')
                },
                date: article.date,
                readingTime: article.readingTime || 5,
                categories: article.categories || [],
                featured: false
              }))} 
              layout="grid" 
              columns={2}
            />
          ) : (
            <div class="bg-gradient-to-br from-green-50 to-yellow-50 rounded-lg p-8 text-center border-2 border-green-200">
              <span class="text-4xl mb-4 block">üìù</span>
              <h3 class="text-lg font-medium text-gray-900 mb-2">
                No hay m√°s art√≠culos de {category}
              </h3>
              <p class="text-gray-600 mb-4">
                Vuelve pronto para ver nuevo contenido.
              </p>
            </div>
          )}
        </section>
        
        {/* üîó ENLACE A VER TODOS */}
        {articles.length > 9 && (
          <div class="mt-12 text-center">
            <div class="inline-flex items-center gap-4">
              <span class="text-gray-600 font-medium">
                Mostrando {Math.min(9, articles.length)} de {articles.length} art√≠culos
              </span>
              <a 
                href={`/${category}`}
                class="inline-flex items-center gap-2 px-6 py-3 bg-gradient-to-r from-green-500 to-emerald-600 text-white font-bold rounded-lg hover:from-green-600 hover:to-emerald-700 transition-all duration-200 shadow-lg hover:shadow-xl"
              >
                <span>Ver todos los art√≠culos</span>
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                </svg>
              </a>
            </div>
          </div>
        )}
      </div>
      
      {/* üìç SIDEBAR - COLUMNA LATERAL */}
      <div class="lg:col-span-4">
        <div class="sticky top-[140px] space-y-8">
          
          {/* üìä ESTAD√çSTICAS */}
          <Card class="p-8 bg-gradient-to-br from-green-50 to-emerald-50 border-green-200">
            <div class="flex items-center gap-3 mb-6">
              <div class="w-8 h-8 bg-gradient-to-br from-green-500 to-emerald-600 rounded-lg flex items-center justify-center">
                <span class="text-white text-sm">üìä</span>
              </div>
              <h3 class="text-xl font-bold text-gray-900">Estad√≠sticas</h3>
            </div>
            
            <div class="grid grid-cols-2 gap-4">
              <div class="text-center">
                <div class="text-2xl font-bold text-green-600">{stats.total}</div>
                <div class="text-sm text-gray-600">Art√≠culos</div>
              </div>
              <div class="text-center">
                <div class="text-2xl font-bold text-blue-600">{stats.categories}</div>
                <div class="text-sm text-gray-600">Temas</div>
              </div>
              <div class="text-center">
                <div class="text-2xl font-bold text-purple-600">{stats.authors}</div>
                <div class="text-sm text-gray-600">Autores</div>
              </div>
              <div class="text-center">
                <div class="text-2xl font-bold text-orange-600">{stats.readingTime}</div>
                <div class="text-sm text-gray-600">Min. promedio</div>
              </div>
            </div>
          </Card>
          
          {/* üî• TEMAS POPULARES */}
          {popularTags.length > 0 && (
            <Card class="p-8">
              <div class="flex items-center gap-3 mb-6">
                <div class="w-8 h-8 bg-gradient-to-br from-orange-500 to-red-500 rounded-lg flex items-center justify-center">
                  <span class="text-white text-sm">üî•</span>
                </div>
                <h3 class="text-xl font-bold text-gray-900">Temas Populares</h3>
              </div>
              
              <div class="flex flex-wrap gap-2">
                {popularTags.map(tag => (
                  <a 
                    href={`/tag/${tag.toLowerCase().replace(/\s+/g, '-')}`}
                    class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-gradient-to-r from-orange-100 to-red-100 text-orange-800 hover:from-orange-200 hover:to-red-200 transition-all duration-200"
                  >
                    {tag}
                  </a>
                ))}
              </div>
            </Card>
          )}
          
          {/* üì± NEWSLETTER */}
          <Newsletter />

        </div>
      </div>
    </div>
  </Container>
</BaseLayout>
<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  a, button {
    transition: all 0.2s ease;
  }

  button:focus-visible,
  a:focus-visible,
  input:focus-visible {
    outline: 2px solid #eab308;
    outline-offset: 2px;
  }

  html {
    scroll-behavior: smooth;
  }

  @media (max-width: 768px) {
    .text-3xl {
      font-size: 1.875rem;
    }
    
    .text-4xl {
      font-size: 2.25rem;
    }
  }
</style>