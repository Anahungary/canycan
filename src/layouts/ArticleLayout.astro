---
// ArticleLayout.astro - Layout para páginas de artículos MEJORADO
import BaseLayout from './BaseLayout.astro';
import ArticleMeta from '../components/blog/ArticleMeta.astro';
import ShareButtons from '../components/blog/ShareButtons.astro';
import Container from '../components/ui/Container.astro';
import Card from '../components/ui/Card.astro';
import { Image } from 'astro:assets';

interface Author {
  name: string;
  avatar?: string;
  bio?: string;
}

interface Props {
  title: string;
  description: string;
  image: string;
  author: Author;
  date: string;
  readingTime: number;
  categories: string[];
  views?: number;
  relatedArticles?: any[]; // Artículos relacionados
  showTableOfContents?: boolean;
}

const { 
  title, 
  description, 
  image, 
  author, 
  date, 
  readingTime, 
  categories,
  views,
  relatedArticles = [],
  showTableOfContents = true,
} = Astro.props;

// URL canónica para compartir
const currentUrl = Astro.url.pathname;
---

<BaseLayout 
  title={title}
  description={description}
  ogImage={image}
  canonicalUrl={currentUrl}
  bodyClass="article-page"
>
  <!-- Estilos para títulos más grandes y scroll spy -->
  <style>
    /* TÍTULOS MÁS GRANDES */
    .article-content.prose h1 {
      font-size: 2.5rem !important;
      font-weight: 800 !important;
      line-height: 1.2 !important;
      margin: 2rem 0 1.5rem 0 !important;
      color: #1a202c !important;
      scroll-margin-top: 6rem;
    }
    
    .article-content.prose h2 {
      font-size: 2rem !important;
      font-weight: 700 !important;
      line-height: 1.3 !important;
      margin: 2rem 0 1rem 0 !important;
      color: #2d3748 !important;
      border-bottom: 2px solid #e2e8f0 !important;
      padding-bottom: 0.5rem !important;
      scroll-margin-top: 6rem;
    }
    
    .article-content.prose h3 {
      font-size: 1.6rem !important;
      font-weight: 600 !important;
      line-height: 1.4 !important;
      margin: 1.5rem 0 0.8rem 0 !important;
      color: #2d3748 !important;
      scroll-margin-top: 6rem;
    }
    
    .article-content.prose h4 {
      font-size: 1.3rem !important;
      font-weight: 600 !important;
      color: #4a5568 !important;
      margin: 1.2rem 0 0.6rem 0 !important;
      scroll-margin-top: 6rem;
    }
    
    /* Párrafos más grandes */
    .article-content.prose p {
      font-size: 1.125rem !important;
      line-height: 1.8 !important;
      margin-bottom: 1.5rem !important;
    }
    
    /* TOC mejorada con scroll spy */
    .toc-link {
      transition: all 0.2s ease !important;
      display: block !important;
      padding: 0.5rem 0 !important;
      border-left: 3px solid transparent !important;
      padding-left: 0.75rem !important;
      border-radius: 4px !important;
    }
    
    .toc-link:hover {
      background-color: #f7fafc !important;
      color: #2d3748 !important;
    }
    
    .toc-link.active {
      background-color: #ebf8ff !important;
      border-left-color: #4299e1 !important;
      color: #2b6cb0 !important;
      font-weight: 600 !important;
    }
    
    .toc-h3 {
      margin-left: 1rem !important;
      font-size: 0.9rem !important;
      color: #718096 !important;
    }
    
    .toc-sticky {
      position: sticky;
      top: 6rem;
      max-height: calc(100vh - 8rem);
      overflow-y: auto;
    }
  </style>

  <div class="article-hero py-8 md:py-12 bg-white border-b border-gray-100">
    <Container size="md">
      <ArticleMeta 
        title={title}
        author={author}
        date={date}
        readingTime={readingTime}
        categories={categories}
        views={views}
        showAuthorBio={false}
      />
    </Container>
  </div>
  
  <Container size="md" class="py-8">
    <div class="grid grid-cols-1 lg:grid-cols-12 gap-8">
      {/* Contenido principal */}
      <article class="lg:col-span-8">
        {/* Imagen destacada */}
        <div class="mb-8 rounded-lg overflow-hidden">
          <Image 
            src={image} 
            alt={title}
            width={1200}
            height={630}
            class="w-full h-auto"
          />
        </div>
        
        {/* Contenido del artículo */}
        <div class="article-content prose prose-lg max-w-none">
          <slot />
        </div>
        
        {/* Autor (bio) */}
        <Card variant="default" padding="md" class="mt-12">
          <div class="flex flex-col sm:flex-row items-start sm:items-center gap-4">
            {author.avatar ? (
              <Image 
                src={author.avatar} 
                alt={author.name}
                width={80}
                height={80}
                class="w-16 h-16 rounded-full"
              />
            ) : (
              <div class="w-16 h-16 rounded-full bg-[#AFC2D5] flex items-center justify-center text-white text-xl font-bold">
                {author.name.charAt(0)}
              </div>
            )}
            <div>
              <h3 class="text-lg font-bold">{author.name}</h3>
              {author.bio && (
                <p class="text-gray-600 mt-1">{author.bio}</p>
              )}
            </div>
          </div>
        </Card>
        
        {/* Botones para compartir */}
        <div class="mt-8 border-t border-gray-200 pt-8">
          <h3 class="text-lg font-bold mb-4">Compartir artículo</h3>
          <ShareButtons 
            url={currentUrl} 
            title={title} 
            vertical={false} 
            showLabel={true}
          />
        </div>
      </article>
      
      {/* Sidebar */}
      <div class="lg:col-span-4">
        <div class="toc-sticky">
          {/* Tabla de contenidos mejorada */}
          {showTableOfContents && (
            <Card variant="default" padding="md" class="mb-6">
              <h3 class="text-lg font-bold mb-4 text-[#2E2E2E]">Tabla de contenidos</h3>
              <div class="table-of-contents text-sm">
                <div id="table-of-contents-container"></div>
              </div>
            </Card>
          )}
          
          {/* Compartir (versión sticky) */}
          <Card variant="default" padding="md" class="mb-6">
            <h3 class="text-lg font-bold mb-4">Compartir</h3>
            <ShareButtons 
              url={currentUrl} 
              title={title} 
              vertical={true} 
              showLabel={false}
            />
          </Card>
          
          {/* Artículos relacionados */}
          {relatedArticles.length > 0 && (
            <Card variant="default" padding="md">
              <h3 class="text-lg font-bold mb-4">Artículos relacionados</h3>
              <div class="space-y-4">
                {relatedArticles.map(article => (
                  <div class="flex items-start space-x-3">
                    <a href={`/articulos/${article.id}`} class="flex-shrink-0">
                      <Image 
                        src={article.image} 
                        alt={article.title}
                        width={80}
                        height={60}
                        class="w-20 h-16 object-cover rounded"
                      />
                    </a>
                    <div>
                      <a 
                        href={`/articulos/${article.id}`} 
                        class="text-sm font-medium hover:text-[#AFC2D5] line-clamp-2"
                      >
                        {article.title}
                      </a>
                      <p class="text-xs text-gray-500 mt-1">
                        {article.readingTime} min lectura
                      </p>
                    </div>
                  </div>
                ))}
              </div>
            </Card>
          )}
        </div>
      </div>
    </div>
  </Container>
  
  <script>
    // Script para generar la tabla de contenidos dinámicamente CON SCROLL SPY
    document.addEventListener('DOMContentLoaded', () => {
      const articleContent = document.querySelector('.article-content');
      const tocContainer = document.getElementById('table-of-contents-container');
      
      if (articleContent && tocContainer) {
        const headings = articleContent.querySelectorAll('h1, h2, h3, h4');
        
        if (headings.length > 0) {
          const toc = document.createElement('ul');
          toc.className = 'space-y-1';
          
          headings.forEach((heading, index) => {
            // Añadir un ID al encabezado si no tiene uno
            if (!heading.id) {
              // Crear ID basado en el texto del título
              const slug = heading.textContent
                ?.toLowerCase()
                .replace(/[^\w\s-]/g, '')
                .replace(/[\s_-]+/g, '-')
                .replace(/^-+|-+$/g, '') || `heading-${index}`;
              heading.id = slug;
            }
            
            const listItem = document.createElement('li');
            const link = document.createElement('a');
            link.href = `#${heading.id}`;
            link.textContent = heading.textContent;
            link.className = `toc-link ${heading.tagName === 'H3' || heading.tagName === 'H4' ? 'toc-h3' : ''} text-[#2E2E2E] hover:text-[#AFC2D5]`;
            link.setAttribute('data-target', heading.id);
            
            // Smooth scroll
            link.addEventListener('click', (e) => {
              e.preventDefault();
              heading.scrollIntoView({ 
                behavior: 'smooth', 
                block: 'start' 
              });
            });
            
            listItem.appendChild(link);
            toc.appendChild(listItem);
          });
          
          tocContainer.appendChild(toc);
          
          // SCROLL SPY FUNCTIONALITY
          const tocLinks = toc.querySelectorAll('.toc-link');
          
          function updateActiveLink() {
            let current = '';
            
            headings.forEach((heading) => {
              const rect = heading.getBoundingClientRect();
              // Ajustar el offset para considerar el header sticky
              if (rect.top <= 120) {
                current = heading.id;
              }
            });
            
            tocLinks.forEach((link) => {
              link.classList.remove('active');
              const target = link.getAttribute('data-target');
              if (target && target === current) {
                link.classList.add('active');
              }
            });
          }
          
          // Update active link on scroll
          let ticking = false;
          window.addEventListener('scroll', () => {
            if (!ticking) {
              requestAnimationFrame(() => {
                updateActiveLink();
                ticking = false;
              });
              ticking = true;
            }
          });
          
          // Initial update
          updateActiveLink();
          
        } else {
          // Si no hay encabezados, ocultar la tabla de contenidos
          const tocCard = tocContainer.closest('.card');
          if (tocCard && tocCard instanceof HTMLElement) {
            tocCard.style.display = 'none';
          }
        }
      }
    });
  </script>
</BaseLayout>