---
// ArticleLayout.astro - VERSIÓN FINAL COMPLETA PARA ASTRO 5
import BaseLayout from './BaseLayout.astro';
import ShareButtons from '../components/blog/ShareButtons.astro';
import Container from '../components/ui/Container.astro';
import { Image } from 'astro:assets';
import '../styles/article.css';
import Newsletter from '../components/common/Newsletter.astro';  // ← AGREGAR ESTA LÍNEA


interface Author {
  name: string;
  avatar?: string;
  bio?: string;
}

interface Props {
  title: string;
  description: string;
  image: string;
  author: Author;
  date: string;
  readingTime: number;
  categories: string[];
  // 🔧 PROPS SEPARADAS PARA CATEGORY Y TAGS
  category?: string;
  tags?: string[];
  views?: number;
  relatedArticles?: any[];
  popularArticles?: any[];
  breadcrumbItems?: Array<{label: string; href?: string; icon?: string}>;
  showBreadcrumb?: boolean;
}

const { 
  title, 
  description, 
  image, 
  author, 
  date, 
  readingTime, 
  categories,
  category,
  tags = [],
  views,
  relatedArticles = [],
  popularArticles = [],
  breadcrumbItems = [],
  showBreadcrumb = true
} = Astro.props;

const currentUrl = Astro.url.pathname;


function getMarketingViews(articleSlug: string, category?: string, originalViews?: number): number {
  if (originalViews && originalViews >= 50) {
    return originalViews;
  }
  
  const hash = (articleSlug || '').split('').reduce((a, b) => {
    a = ((a << 5) - a) + b.charCodeAt(0);
    return a & a;
  }, 0);
  
  const seed = Math.abs(hash);
  const popularCategories = ['entrenamiento', 'alimentacion', 'salud', 'cachorros'];
  const isPopular = Boolean(category && popularCategories.includes(category.toLowerCase()));
  
  if (isPopular) {
    return 180 + (seed % 670);
  } else {
    return 50 + (seed % 230);
  }
}

const articleSlug = currentUrl.split('/').pop() || '';
const displayViews = views || 0;
// 🔧 FUNCIÓN PARA OBTENER LA CATEGORÍA PRINCIPAL REAL
function getRealCategory(): string | null {
  const realCategoryNames = [
    'comportamiento', 'entrenamiento', 'alimentacion', 'alimentación', 
    'salud', 'cuidado', 'nuevos-duenos', 'nuevos dueños', 'cachorros'
  ];
  
  // 1. Primero intentar con category (data.category del CMS)
  if (category && realCategoryNames.includes(category.toLowerCase())) {
    return category;
  }
  
  // 2. Luego buscar en categories array
  const realCategory = categories.find(cat => 
    realCategoryNames.includes(cat.toLowerCase())
  );
  
  return realCategory || null;
}

// 🔧 FUNCIÓN PARA SEPARAR TAGS REALES DE CATEGORÍAS
function getRealTags(): string[] {
  const realCategoryNames = [
    'comportamiento', 'entrenamiento', 'alimentacion', 'alimentación', 
    'salud', 'cuidado', 'nuevos-duenos', 'nuevos dueños', 'cachorros'
  ];
  
  // Combinar tags prop con categories que son realmente tags
  const allTags = [...tags];
  
  // Agregar categories que no son categorías reales (son tags)
  categories.forEach(cat => {
    if (!realCategoryNames.includes(cat.toLowerCase())) {
      allTags.push(cat);
    }
  });
  
  return [...new Set(allTags)]; // Eliminar duplicados
}

// 🔧 OBTENER CATEGORÍA Y TAGS REALES
const realCategory = getRealCategory();
const realTags = getRealTags();

// 🔧 LÓGICA MEJORADA PARA BREADCRUMB
let breadcrumb = breadcrumbItems;

if (breadcrumb.length === 0) {
  breadcrumb = [
    { label: 'Inicio', href: '/', icon: '🏠' }
  ];
  
  if (realCategory) {
    // Mapear categorías reales a URLs que existen
    const categoryMap: Record<string, {href: string, icon: string}> = {
      'comportamiento': { href: '/comportamiento', icon: '🧠' },
      'entrenamiento': { href: '/entrenamiento', icon: '🎯' },
      'alimentacion': { href: '/cuidado', icon: '🥗' },
      'alimentación': { href: '/cuidado', icon: '🥗' },
      'salud': { href: '/cuidado', icon: '🏥' },
      'cuidado': { href: '/cuidado', icon: '💚' },
      'nuevos-duenos': { href: '/nuevos-duenos', icon: '🐾' },
      'nuevos dueños': { href: '/nuevos-duenos', icon: '🐾' },
      'cachorros': { href: '/cachorros', icon: '🐶' }
    };
    
    const categoryInfo = categoryMap[realCategory.toLowerCase()];
    
    if (categoryInfo) {
      breadcrumb.push({ 
        label: realCategory, 
        href: categoryInfo.href, 
        icon: categoryInfo.icon
      });
    } else {
      breadcrumb.push({ 
        label: 'Artículos', 
        href: '/articulos', 
        icon: '📚' 
      });
    }
  } else {
    breadcrumb.push({ 
      label: 'Artículos', 
      href: '/articulos', 
      icon: '📚' 
    });
  }
}
---

<BaseLayout 
  title={title}
  description={description}
  ogImage={image}
  canonicalUrl={currentUrl}
  bodyClass="article-page"
>
  <!-- HEADER DEL ARTÍCULO -->
  <div class="article-header py-16 md:py-24 bg-gradient-to-br from-gray-50 via-white to-green-50">
    <Container size="lg">
      <div class="max-w-4xl mx-auto">
        
        {/* 🔧 BREADCRUMB CORREGIDO */}
        {showBreadcrumb && (
          <nav class="flex items-center text-sm text-gray-500 mb-8" aria-label="Breadcrumb">
            {breadcrumb.map((item, index) => (
              <div class="flex items-center">
                {index > 0 && <span class="mx-2">→</span>}
                
                {item.href ? (
                  <a 
                    href={item.href} 
                    class="hover:text-green-600 transition-colors duration-200"
                  >
                    {item.icon && <span class="mr-1">{item.icon}</span>}
                    {item.label}
                  </a>
                ) : (
                  <span class="text-gray-700">
                    {item.icon && <span class="mr-1">{item.icon}</span>}
                    {item.label}
                  </span>
                )}
              </div>
            ))}
            
            {/* Página actual */}
            <span class="mx-2">→</span>
            <span class="text-gray-700 font-medium truncate max-w-xs" title={title}>
              {title.length > 50 ? title.substring(0, 50) + '...' : title}
            </span>
          </nav>
        )}

        {/* 🔧 BADGES CORREGIDOS: CATEGORÍA AMARILLO + TAGS VERDE */}
        <div class="article-badges mb-8">
          {/* Mostrar categoría principal primero - AMARILLO */}
          {realCategory && (
            <a 
              href={`/${realCategory.toLowerCase()}`} 
              class="inline-block px-4 py-2 rounded-full text-sm font-bold mr-3 mb-2 transition-all duration-300 hover:scale-105 shadow-md bg-gradient-to-r from-yellow-400 to-yellow-500 text-yellow-900 hover:shadow-lg"
            >
              {realCategory}
            </a>
          )}
          
          {/* Mostrar tags - VERDE */}
          {realTags.slice(0, 3).map(tag => (
            <span class="inline-block px-4 py-2 rounded-full text-sm font-bold mr-3 mb-2 shadow-md bg-gradient-to-r from-green-500 to-green-600 text-white">
              #{tag}
            </span>
          ))}
          
          {/* Indicador de más tags - VERDE */}
          {realTags.length > 3 && (
            <span class="inline-block px-4 py-2 rounded-full text-sm font-bold mr-3 mb-2 shadow-md bg-gradient-to-r from-green-500 to-green-600 text-yellow-900">
              +{realTags.length - 3} más
            </span>
          )}
          
          {/* Tiempo de lectura */}
          <span class="inline-block bg-blue-100 text-blue-800 px-4 py-2 rounded-full text-sm font-medium shadow-sm">
            ⏱️ {readingTime} min lectura
          </span>
        </div>

        <!-- Título principal -->
        <h1 class="article-title text-4xl md:text-5xl lg:text-6xl font-bold text-gray-900 mb-6 leading-tight">
          {title}
        </h1>
        
        <!-- Subtítulo -->
        <p class="article-subtitle text-xl md:text-2xl text-gray-600 leading-relaxed mb-10 max-w-3xl">
          {description}
        </p>

        <!-- Metadata premium -->
        <div class="article-meta-enhanced bg-white rounded-2xl p-8 shadow-xl border border-gray-100">
          <div class="flex flex-col md:flex-row md:items-center justify-between gap-6">
            <div class="author-info flex items-center gap-4">
              {author.avatar ? (
                <Image 
                  src={author.avatar} 
                  alt={author.name}
                  width={60}
                  height={60}
                  class="author-avatar w-15 h-15 rounded-full border-4 border-green-200 shadow-lg"
                />
              ) : (
                <div class="author-avatar w-15 h-15 bg-gradient-to-br from-green-500 to-emerald-600 rounded-full flex items-center justify-center text-white text-2xl font-bold border-4 border-green-200 shadow-lg">
                  {author.name.charAt(0)}
                </div>
              )}
              <div class="author-details">
                <h4 class="text-lg font-bold text-gray-900">{author.name}</h4>
                <p class="text-gray-600">{new Date(date).toLocaleDateString('es-ES', { 
                  year: 'numeric', 
                  month: 'long', 
                  day: 'numeric' 
                })}</p>
                <p class="text-sm text-gray-500" data-view-counter>
                  👁️ {displayViews.toLocaleString()} visualizaciones
                </p>

{displayViews > 400 && (
  <p class="text-xs text-orange-600 font-medium mt-1">
    🔥 Trending
  </p>
)}
              </div>
            </div>

            <ShareButtons 
              url={currentUrl} 
              title={title} 
              vertical={false} 
              showLabel={false}
            />
          </div>
        </div>
      </div>
    </Container>
  </div>
  
  <!-- CONTENIDO PRINCIPAL Y SIDEBAR -->
  <Container size="lg" class="py-12">
    <div class="grid grid-cols-1 lg:grid-cols-12 gap-12">
      <!-- Contenido principal -->
      <article class="lg:col-span-9">
        <!-- Imagen principal -->
        <div class="article-hero-image mb-12 relative">
          <div class="relative rounded-2xl overflow-hidden shadow-2xl group">
            <Image 
              src={image} 
              alt={title}
              width={1200}
              height={675}
              class="w-full h-auto"
            />
            <div class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
          </div>
        </div>
        
        <!-- Contenido del artículo -->
        <div class="article-content prose prose-lg max-w-none">
          <slot />
        </div>
        
        <!-- Autor destacado -->
        <div class="author-spotlight bg-gradient-to-br from-green-50 to-emerald-50 rounded-2xl p-8 mt-16 border border-green-100 shadow-lg">
          <div class="flex flex-col sm:flex-row items-start sm:items-center gap-6">
            {author.avatar ? (
              <Image 
                src={author.avatar} 
                alt={author.name}
                width={120}
                height={120}
                class="w-24 h-24 rounded-full border-4 border-white shadow-xl"
              />
            ) : (
              <div class="w-24 h-24 rounded-full bg-gradient-to-br from-green-500 to-emerald-600 flex items-center justify-center text-white text-3xl font-bold border-4 border-white shadow-xl">
                {author.name.charAt(0)}
              </div>
            )}
            <div class="flex-1">
              <h3 class="text-2xl font-bold text-gray-900 mb-3">{author.name}</h3>
              {author.bio && (
                <p class="text-gray-700 leading-relaxed mb-4">{author.bio}</p>
              )}
              <div class="flex flex-wrap gap-4">
                <ShareButtons 
                  url={currentUrl} 
                  title={`Artículo de ${author.name}: ${title}`} 
                  vertical={false} 
                  showLabel={true}
                />
              </div>
            </div>
          </div>
        </div>
      </article>
      
      <!-- Sidebar completo -->
      <div class="lg:col-span-3">
        <div class="sidebar-sticky sticky top-[140px] space-y-8">
          <!-- Artículos populares -->
          <div class="sidebar-card bg-white rounded-2xl shadow-xl border border-gray-100 p-8">
            <div class="flex items-center gap-3 mb-6">
              <img src="/images/perro3.svg" alt="Destacado" class="w-20" />
              <h3 class="text-xl font-bold text-gray-900">Más leídos</h3>
            </div>
            
            <div class="space-y-6">
              {popularArticles && popularArticles.length > 0 ? (
                popularArticles.slice(0, 5).map((article, index) => (
                  <div class="flex items-start space-x-4 group">
                    <div class={`flex-shrink-0 w-10 h-10 rounded-xl flex items-center justify-center text-sm font-bold shadow-md ${
                      index === 0 
                        ? 'bg-gradient-to-br from-yellow-400 to-orange-400 text-white' 
                        : index === 1 
                        ? 'bg-gradient-to-br from-gray-400 to-gray-500 text-white'
                        : index === 2
                        ? 'bg-gradient-to-br from-orange-400 to-red-500 text-white'
                        : 'bg-gray-100 text-gray-600'
                    }`}>
                      {index + 1}
                    </div>
                    <div class="flex-1 min-w-0">
                      <a 
                        href={`/articulos/${article.slug}`}
                        class="block text-sm font-bold text-gray-900 group-hover:text-green-600 transition-colors line-clamp-2 mb-2"
                      >
                        {article.title}
                      </a>
                      <div class="flex items-center gap-2 text-xs text-gray-500">
                        <span class="bg-green-100 text-green-800 px-2 py-1 rounded-full font-medium">
                          {article.category}
                        </span>
                        <span>•</span>
                        <span>{article.readingTime || 5}m</span>
                      </div>
                    </div>
                  </div>
                ))
              ) : (
                <div class="text-center py-8">
                  <div class="w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
                    <span class="text-2xl">📚</span>
                  </div>
                  <p class="text-sm text-gray-500 mb-3">Cargando artículos populares...</p>
                </div>
              )}
            </div>
          </div>
          
          <!-- Artículos relacionados -->
          {relatedArticles.length > 0 && (
            <div class="sidebar-card bg-white rounded-2xl shadow-xl border border-gray-100 p-8">
              <div class="flex items-center gap-3 mb-6">
                <span class="text-3xl">🔗</span>
                <h3 class="text-xl font-bold text-gray-900">Artículos relacionados</h3>
              </div>
              
              <div class="space-y-6">
                {relatedArticles.map(article => (
                  <div class="group">
                    <a href={`/articulos/${article.id}`} class="block">
                      <div class="flex items-start space-x-4">
                        <div class="flex-shrink-0">
                          <Image 
                            src={article.image} 
                            alt={article.title}
                            width={80}
                            height={60}
                            class="w-20 h-16 object-cover rounded-xl border border-gray-200 group-hover:border-green-300 transition-colors"
                          />
                        </div>
                        <div class="flex-1 min-w-0">
                          <h4 class="text-sm font-bold text-gray-900 group-hover:text-green-600 transition-colors line-clamp-2 mb-2">
                            {article.title}
                          </h4>
                          <div class="flex items-center gap-2 text-xs text-gray-500">
                            <span class="bg-green-100 text-green-800 px-2 py-1 rounded-full font-medium">
                              {article.readingTime}m
                            </span>
                          </div>
                        </div>
                      </div>
                    </a>
                  </div>
                ))}
              </div>
            </div>
          )}

          <!-- Newsletter integrado premium -->
            <!-- Decoraciones de fondo -->
      
              
              <!-- Newsletter form integrado -->
               <Newsletter />
              
            </div>
          </div>
        </div>
      </div>
    </div>
  </Container>

  <!-- Barra de progreso de lectura -->
  <div class="reading-progress fixed top-0 left-0 right-0 z-50 h-1 bg-gray-200">
    <div class="reading-progress-bar h-full bg-gradient-to-r from-green-500 to-emerald-600 transition-all duration-150 ease-out w-0"></div>
  </div>

  <!-- Script para funcionalidades -->
 <script>
  document.addEventListener('DOMContentLoaded', () => {
    
    // 📊 AUTO-TRACKING DE VIEWS (AGREGAR ESTO)
    function initViewTracker() {
      try {
        const currentPath = window.location.pathname;
        const slug = currentPath.split('/').pop();
        
        if (!slug) return;
        
        const viewedKey = `viewed_${slug}`;
        const alreadyViewed = sessionStorage.getItem(viewedKey);
        
        if (alreadyViewed) {
          console.log(`👁️ Artículo "${slug}" ya fue visto en esta sesión`);
          return;
        }
        
        console.log('⏱️ Esperando 3 segundos para confirmar lectura...');
        setTimeout(async () => {
          try {
            const response = await fetch('/.netlify/functions/article-view', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ slug: slug })
            });
            
            const result = await response.json();
            
            if (result.success) {
              console.log(`✅ Vista trackeada: "${result.title}" - ${result.views} views`);
              sessionStorage.setItem(viewedKey, 'true');
              
              // Actualizar contador si existe
              const viewCounter = document.querySelector('[data-view-counter]');
              if (viewCounter) {
                const formatted = result.views.toLocaleString();
                viewCounter.textContent = `👁️ ${formatted} visualizaciones`;
              }
            }
          } catch (error) {
            console.error('❌ Error enviando vista:', error);
          }
        }, 3000);
        
      } catch (error) {
        console.error('❌ Error inicializando view tracker:', error);
      }
    }
    
    // Inicializar tracking
    initViewTracker();
    // FIN AUTO-TRACKING
      
      // Progress bar de lectura
      function updateProgress(): void {
        const scrolled = window.scrollY;
        const maxScroll = document.documentElement.scrollHeight - window.innerHeight;
        const progress = (scrolled / maxScroll) * 100;
        
        const progressBarElement = document.querySelector('.reading-progress-bar') as HTMLElement;
        if (progressBarElement) {
          progressBarElement.style.width = `${Math.min(100, Math.max(0, progress))}%`;
        }
      }
      
      window.addEventListener('scroll', updateProgress);
      updateProgress();

      // Newsletter específico del sidebar
      const form = document.getElementById('newsletter-sidebar') as HTMLFormElement;
      if (!form) return;

      const submitButton = form.querySelector('button[type="submit"]') as HTMLButtonElement;
      const buttonText = form.querySelector('.button-text') as HTMLElement;
      const loadingText = form.querySelector('.loading-text') as HTMLElement;
      const messageContainer = form.querySelector('.message-container') as HTMLElement;
      const successMessage = form.querySelector('.success-message') as HTMLElement;
      const errorMessage = form.querySelector('.error-message') as HTMLElement;
      const errorText = form.querySelector('.error-text') as HTMLElement;

      form.addEventListener('submit', async (e: Event) => {
        e.preventDefault();

        const formData = new FormData(form);
        const email = formData.get('email') as string;

        if (!email) {
          showError('Por favor, ingresa tu email');
          return;
        }

        setLoading(true);
        hideMessages();

        try {
          // Simulación de envío (reemplazar con tu API real)
          await new Promise(resolve => setTimeout(resolve, 1000));
          
          showSuccess('¡Suscripción exitosa! Revisa tu email.');
          form.reset();
          
        } catch (error) {
          showError('Error de conexión. Inténtalo de nuevo.');
        } finally {
          setLoading(false);
        }
      });

      

      function setLoading(isLoading: boolean): void {
        if (submitButton) {
          submitButton.disabled = isLoading;
        }
        if (buttonText && loadingText) {
          if (isLoading) {
            buttonText.classList.add('hidden');
            loadingText.classList.remove('hidden');
          } else {
            buttonText.classList.remove('hidden');
            loadingText.classList.add('hidden');
          }
        }
      }

      function showSuccess(message: string): void {
        if (messageContainer && successMessage) {
          messageContainer.classList.remove('hidden');
          successMessage.classList.remove('hidden');
          successMessage.textContent = message;
        }
      }

      function showError(message: string): void {
        if (messageContainer && errorMessage && errorText) {
          messageContainer.classList.remove('hidden');
          errorMessage.classList.remove('hidden');
          errorText.textContent = message;
        }
      }

      function hideMessages(): void {
        if (messageContainer) {
          messageContainer.classList.add('hidden');
        }
        if (successMessage) {
          successMessage.classList.add('hidden');
        }
        if (errorMessage) {
          errorMessage.classList.add('hidden');
        }
      }
      
      // Mejorar enlaces externos
      const articleContentEl = document.querySelector('.article-content');
      if (articleContentEl) {
        const externalLinks = articleContentEl.querySelectorAll('a[href^="http"]') as NodeListOf<HTMLAnchorElement>;
        externalLinks.forEach((link: HTMLAnchorElement) => {
          link.setAttribute('target', '_blank');
          link.setAttribute('rel', 'noopener noreferrer');
          link.classList.add('external-link');
        });
        
        const images = articleContentEl.querySelectorAll('img') as NodeListOf<HTMLImageElement>;
        images.forEach((img: HTMLImageElement) => {
          img.loading = 'lazy';
          img.classList.add('article-image');
        });
      }
      
      console.log('✅ ArticleLayout cargado correctamente');
    });
  </script>
</BaseLayout>

<style>
  /* ===== ESTILOS CORREGIDOS SIN DUPLICACIÓN DE NÚMEROS ===== */
  
  /* Estilos premium para el artículo */
  .article-content {
    @apply prose prose-lg max-w-none;
  }
  
  .article-content h1 {
    @apply text-4xl font-bold text-gray-900 mb-6 mt-12 border-b-4 border-green-500 pb-4;
  }
  
  .article-content h2 {
    @apply text-3xl font-bold mb-4 mt-10 text-green-700;
  }
  
  .article-content h3 {
    @apply text-2xl font-bold mb-3 mt-8 text-green-600;
  }
  
  .article-content p {
    @apply text-gray-700 leading-relaxed mb-6;
  }
  
  .article-content img {
    @apply rounded-xl shadow-lg my-8 border border-gray-200;
  }
  
  .article-content blockquote {
    @apply border-l-4 border-green-500 bg-green-50 p-6 my-8 rounded-r-xl italic;
  }
  
  /* 🔧 LISTAS MEJORADAS - QUITANDO LA DUPLICACIÓN */
  .article-content ul {
    @apply my-6 space-y-2;
  }
  
  .article-content ol {
    @apply my-8;
    /* QUITAR la numeración automática de prose */
    list-style: none !important;
    padding-left: 0 !important;
    counter-reset: item;
  }
  
  .article-content ol li {
    @apply text-gray-700 leading-relaxed mb-4;
    /* QUITAR el número automático y agregar padding para el personalizado */
    position: relative;
    padding-left: 3rem !important;
    counter-increment: item;
    font-size: 1.1rem;
  }
  
  /* Números personalizados en círculos verdes */
  .article-content ol li::before {
    content: counter(item);
    @apply absolute w-8 h-8 bg-gradient-to-br from-green-500 to-green-600 text-white rounded-full flex items-center justify-center font-bold text-sm;
    left: 0;
    top: 0;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  }
  
  .article-content li {
    @apply text-gray-700;
  }
  
  .article-content a {
    @apply text-green-600 hover:text-green-700 transition-colors duration-200;
  }
  
  .external-link::after {
    content: "↗";
    @apply ml-1 text-xs text-gray-400;
  }
  
  /* Animaciones */
  .sidebar-card {
    transition: all 0.3s ease;
  }
  
  .sidebar-card:hover {
    transform: translateY(-2px);
  }
  
  /* Line clamp utility */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  /* Responsive mejoras */
  @media (max-width: 768px) {
    .article-title {
      @apply text-3xl;
    }
    
    .article-subtitle {
      @apply text-lg;
    }
    
    /* Números más pequeños en móvil */
    .article-content ol li::before {
      @apply w-7 h-7 text-xs;
    }
    
    .article-content ol li {
      padding-left: 2.5rem !important;
    }
  }
  
  /* Estilos específicos del newsletter sidebar */
  .newsletter-form input[type="email"]:focus {
    transform: scale(1.02);
  }
  
  .newsletter-form button:hover {
    transform: translateY(-1px);
  }
  
  /* Animación para los mensajes */
  .message-container .success-message,
  .message-container .error-message {
    animation: slideIn 0.3s ease-out;
  }
  
  @keyframes slideIn {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>